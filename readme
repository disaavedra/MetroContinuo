# Sistema Metro Continuo

Este proyecto simula un sistema ferroviario que involucra trenes, vagones, estaciones y pasajeros. La simulación incluye animaciones gráficas del movimiento de los trenes, eventos como aceleración, desaceleración, desacople y acople de vagones, así como la gestión de pasajeros que suben y bajan en las estaciones. Al finalizar la simulación, se genera un reporte detallado con estadísticas de pasajeros y tiempos.

---

## Características

- **Simulación de trenes:** Controla el movimiento de trenes y vagones a lo largo de una ruta predefinida.
- **Gestión de estaciones:** Cada estación maneja la creación de pasajeros, asignación de vagones y puntos críticos (desacople, acople).
- **Eventos de movimiento:** Se simulan eventos de aceleración, desaceleración y espera en los vagones.
- **Gestión de pasajeros:** Los pasajeros se asignan a posiciones en los vagones de forma ordenada, se actualiza su tiempo de viaje y se registran sus movimientos.
- **Animación:** Se utiliza `matplotlib` para visualizar la animación de trenes y vagones, mostrando información como el número de pasajeros en cada celda.
- **Reportes:** Al finalizar la simulación se genera un reporte que incluye:
  - Número de pasajeros que llegaron a su destino.
  - Promedio de metros recorridos por pasajero.
  - Mediana del tiempo de espera de los vagones.
  - Estadísticas adicionales exportadas a archivos CSV.

---

## Requisitos

- Python 3.x
- [NumPy](https://numpy.org/)
- [Matplotlib](https://matplotlib.org/)

> **Nota:** Los módulos `csv` y `random` son parte de la librería estándar de Python.

---

## Instalación

1. **Clonar el repositorio:**

   ```bash
   git clone https://github.com/tu_usuario/train-simulator.git
   cd train-simulator

## Estructura del Proyecto

- **main.py:** Archivo principal para configurar y ejecutar la simulación.
- **Simulator.py:** Contiene la clase `Simulator`, que gestiona la lógica de simulación, animación y generación de reportes.
- **Station.py:** Define la clase `Station` para la gestión de estaciones y pasajeros.
- **Train.py:** Implementa la clase `Train`, que maneja el movimiento y eventos de los trenes.
- **Wagon.py:** Define la clase `Wagon` para la representación y gestión de vagones.
- **Passenger.py:** Implementa la clase `Passenger`, que almacena la información de cada pasajero.
- **README.md:** Este archivo.

---

## Uso

El archivo `main.py` contiene la configuración de la simulación, donde se pueden ajustar parámetros tales como:

- Número de trenes y vagones.
- Velocidad, aceleración y desaceleración.
- Duración de la simulación.
- Configuración de estaciones y flujos de pasajeros.

El proyecto implementa tres modos de ejecución, ahora con nombres más representativos:

- **run_simulation()**  
  Ejecuta la simulación con animación y, al finalizar, genera el reporte final.

- **animate_train_simulation()**  
  Muestra únicamente la animación gráfica de los trenes y sus vagones.

- **execute_simulation_logic()**  
  Ejecuta la simulación lógica sin animación y genera el reporte final.

Para ejecutar la simulación, simplemente descomenta la función deseada en `main.py` y ejecuta:

```bash
python main.py
```

## Personalización

Puedes modificar los parámetros en el archivo `main.py` para adaptar la simulación a distintos escenarios. Entre los parámetros ajustables se incluyen:

- **Parámetros generales:** Número de trenes, velocidad, aceleración, desaceleración y tiempo total de simulación.
- **Parámetros de estación:** Capacidad, posición y matrices de flujos de pasajeros.
- **Parámetros de vagones:** Dimensiones y capacidad de pasajeros por metro.

## Reporte

Al finalizar la simulación, se genera un reporte que se imprime en la consola y se exporta a archivos CSV (`passenger_report.csv` y `fail_passenger_report.csv`). El reporte incluye:

- Número de pasajeros que llegaron a cada estación.
- Número de pasajeros que fallaron al bajarse.
- Promedio global de metros movidos por pasajero.
- Headway de los trenes.
- Mediana del tiempo de espera de los vagones.
- Total de pasajeros transportados durante la simulación.

## Consideraciones y Notas de desarrollo

1. Visualización de Operaciones de Pasajeros:
   - Los archivos FailPassengerDistribution, PassengerTimesDistribution y 
     PassengerMoveDistribution se utilizan para visualizar de forma más 
     detallada las operaciones y comportamientos de los pasajeros durante
     la simulación.
   - NOTA: Los dos primeros archivos (FailPassengerDistribution y 
     PassengerTimesDistribution) solo se pueden utilizar con la lista definida
     en la línea 6.
   - Para modificar dicha lista y permitir el uso de nombres personalizados para 
     las estaciones, se debe realizar el cambio correspondiente en la función 
     Simulator.export_passenger_report.

2. Variable "position_limit":
   - Actualmente, a la variable position_limit se le suma un valor fijo (en este 
     caso, 200) para evitar iteraciones excesivas en el mismo punto de una 
     estación y prevenir conflictos durante el acople del carro.
   - Se planea investigar y mejorar esta lógica en futuras versiones.

3. Visualización del Interior de Trenes y Movimiento de Pasajeros:
   - La función simulator.animate_train_simulation() permite visualizar el interior
     de los trenes, los carros y el movimiento de los pasajeros, pero es intensiva 
     en recursos y puede ser muy lenta.
   - Se recomienda usarla con 1 o 2 trenes para evitar demoras excesivas y poder
     observar cómo se movilizan los pasajeros.
   - A futuro se explorará la posibilidad de implementar permutaciones entre 
     pasajeros que viajan en sentidos contrarios para mejorar aún más el flujo y 
     reducir los atochamientos.

4. Velocidad de Movimiento de Pasajeros:
   - La variable estática Passenger.movement_speed se mantiene en 1 (metro por 
     segundo) en la versión actual.
   - Aunque no se ha abordado en esta versión, podría ser relevante para estudios
     futuros sobre la velocidad de los pasajeros dentro del tren.
   - En pruebas preliminares, modificar este valor no genera grandes diferencias, 
     pero se mantiene como referencia para futuras mejoras.

5. Tiempos y Movimientos en la Estación:
   - Los tiempos de espera en la estación (excluyendo el tiempo que el carro espera
     en la estación) y el movimiento de los pasajeros dentro de la propia estación 
     no se consideran en esta versión.
   - Esto puede ampliarse en futuras versiones para obtener un modelo más completo 
     de la operación ferroviaria.

6. Capacidad de Abordaje por Unidad de Tiempo:
   - Existe otra variable estática que no se abordó en este estudio: la cantidad de 
     pasajeros que abordan del andén al vagón.
   - Actualmente, se permite un máximo de 6 pasajeros por unidad de tiempo.
   - Para modificar este parámetro, se debe ajustar la función 
     Simulator.handle_boarding_passengers.

7. Visualización de Pasajeros en la Simulación Completa:
   - La visualización de pasajeros en la simulación al ejecutar 
     simulator.run_simulation() puede verse afectada por las variables modificadas.
   - Si la visualización resulta deficiente, se recomienda ajustar la variable 
     label_offset dentro de la función Simulator.update para mejorar la legibilidad 
     de los labels en pantalla.
